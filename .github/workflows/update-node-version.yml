name: Update Default Node.js Version

on:
  schedule:
    # Run every 3 months on the 1st at 9 AM UTC
    - cron: '0 9 1 */3 *'
  workflow_dispatch: # Allow manual triggering

jobs:
  update-node-version:
    name: Update Default Node.js Version
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Get latest LTS Node.js version
      id: node-version
      run: |
        # Get the latest LTS version from Node.js API
        LTS_VERSION=$(curl -s https://nodejs.org/dist/index.json | jq -r '.[0].version' | sed 's/v//')
        echo "Latest LTS version: $LTS_VERSION"
        echo "version=$LTS_VERSION" >> $GITHUB_OUTPUT
        
    - name: Check if update is needed
      id: check-update
      run: |
        # Extract current default version from common.sh
        CURRENT_VERSION=$(grep -o 'node:[0-9]*-alpine' bin/common.sh | head -1 | sed 's/node://' | sed 's/-alpine//')
        echo "Current default version: $CURRENT_VERSION"
        echo "Latest LTS version: ${{ steps.node-version.outputs.version }}"
        
        if [ "$CURRENT_VERSION" != "${{ steps.node-version.outputs.version }}" ]; then
          echo "update_needed=true" >> $GITHUB_OUTPUT
          echo "üîÑ Update needed: $CURRENT_VERSION ‚Üí ${{ steps.node-version.outputs.version }}"
        else
          echo "update_needed=false" >> $GITHUB_OUTPUT
          echo "‚úÖ Already up to date: $CURRENT_VERSION"
        fi
        
    - name: Update common.sh with new version
      if: steps.check-update.outputs.update_needed == 'true'
      run: |
        NEW_VERSION="${{ steps.node-version.outputs.version }}"
        # Update the default version in common.sh
        sed -i "s/node:[0-9]*-alpine/node:${NEW_VERSION}-alpine/g" bin/common.sh
        
        # Verify the change
        echo "Updated common.sh:"
        grep "node:.*-alpine" bin/common.sh
        
    - name: Test the updated version
      if: steps.check-update.outputs.update_needed == 'true'
      run: |
        # Test that the new version works
        echo "Testing new Node.js version..."
        docker run --rm node:${{ steps.node-version.outputs.version }}-alpine node --version
        
    - name: Create Pull Request
      if: steps.check-update.outputs.update_needed == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update default Node.js version to ${{ steps.node-version.outputs.version }}"
        title: "üîÑ Update default Node.js version to ${{ steps.node-version.outputs.version }}"
        body: |
          ## üîÑ Node.js Version Update
          
          This PR updates the default Node.js version used by the shims.
          
          **Changes:**
          - Updated default version from `node:*-alpine` to `node:${{ steps.node-version.outputs.version }}-alpine`
          - This ensures users get the latest LTS version by default
          
          **Testing:**
          - ‚úÖ New version tested and working
          - ‚úÖ Docker image pulls successfully
          
          **Impact:**
          - Users will get the latest LTS Node.js version by default
          - Existing projects with `.nvmrc`, `.node-version`, or `package.json` engines will continue to use their specified versions
          
          ---
          *This PR was automatically created by the Node.js version update workflow.*
        branch: update-node-version-${{ steps.node-version.outputs.version }}
        delete-branch: true
        
    - name: Summary
      run: |
        if [ "${{ steps.check-update.outputs.update_needed }}" == "true" ]; then
          echo "‚úÖ Pull request created to update Node.js version to ${{ steps.node-version.outputs.version }}"
        else
          echo "‚ÑπÔ∏è  No update needed - already using latest LTS version"
        fi
